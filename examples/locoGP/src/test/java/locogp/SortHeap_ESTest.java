/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 28 05:39:22 GMT 2020
 */

package locogp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import locogp.SortHeap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class SortHeap_ESTest extends SortHeap_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Integer[] integerArray0 = new Integer[3];
      Integer integer0 = new Integer(249);
      assertEquals(249, (int)integer0);
      assertNotNull(integer0);
      
      // Undeclared exception!
      try { 
        SortHeap.sort(integerArray0, integer0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 247
         //
         verifyException("locogp.SortHeap", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SortHeap sortHeap0 = new SortHeap();
      assertNotNull(sortHeap0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Integer[] integerArray0 = new Integer[3];
      int int0 = 2;
      Integer integer0 = new Integer(2);
      assertEquals(2, (int)integer0);
      assertTrue(integer0.equals((Object)int0));
      assertNotNull(integer0);
      
      integerArray0[0] = integer0;
      Integer integer1 = new Integer(0);
      assertEquals(0, (int)integer1);
      assertFalse(integer1.equals((Object)int0));
      assertFalse(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      
      integerArray0[1] = integer1;
      Integer[] integerArray1 = SortHeap.sort(integerArray0, integerArray0[0]);
      assertSame(integerArray0, integerArray1);
      assertSame(integerArray1, integerArray0);
      assertEquals(3, integerArray0.length);
      assertEquals(3, integerArray1.length);
      assertNotNull(integerArray1);
      
      Integer[] integerArray2 = SortHeap.sort(integerArray0, (Integer) int0);
      assertSame(integerArray0, integerArray1);
      assertSame(integerArray0, integerArray2);
      assertSame(integerArray2, integerArray0);
      assertSame(integerArray2, integerArray1);
      assertEquals(3, integerArray0.length);
      assertEquals(3, integerArray2.length);
      assertNotNull(integerArray2);
  }
}
