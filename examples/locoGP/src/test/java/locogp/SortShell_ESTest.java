/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 16 05:20:48 GMT 2020
 */

package locogp;

import org.junit.Test;
import static org.junit.Assert.*;
import locogp.SortShell;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class SortShell_ESTest extends SortShell_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Integer[] integerArray0 = new Integer[4];
      Integer integer0 = new Integer(4188);
      assertNotNull(integer0);
      assertEquals(4188, (int)integer0);
      
      integerArray0[0] = integer0;
      Integer integer1 = new Integer((-1));
      assertFalse(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals((-1), (int)integer1);
      
      integerArray0[1] = integer1;
      Integer integer2 = new Integer((int) integerArray0[0]);
      assertFalse(integer2.equals((Object)integer1));
      assertTrue(integer2.equals((Object)integer0));
      assertNotNull(integer2);
      assertEquals(4, integerArray0.length);
      assertEquals(4188, (int)integer2);
      
      integerArray0[2] = integer2;
      Integer integer3 = Integer.valueOf("4");
      assertFalse(integer3.equals((Object)integer0));
      assertFalse(integer3.equals((Object)integer1));
      assertFalse(integer3.equals((Object)integer2));
      assertNotNull(integer3);
      assertEquals(4, (int)integer3);
      
      integerArray0[3] = integer3;
      Integer[] integerArray1 = SortShell.sort(integerArray0, integer3);
      assertFalse(integer3.equals((Object)integer0));
      assertFalse(integer3.equals((Object)integer1));
      assertFalse(integer3.equals((Object)integer2));
      assertNotNull(integerArray1);
      assertEquals(4, integerArray0.length);
      assertEquals(4, integerArray1.length);
      assertSame(integerArray0, integerArray1);
      assertSame(integerArray1, integerArray0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Integer[] integerArray0 = new Integer[6];
      Integer integer0 = new Integer((-2712));
      assertNotNull(integer0);
      assertEquals((-2712), (int)integer0);
      
      Integer[] integerArray1 = SortShell.sort(integerArray0, integer0);
      assertNotNull(integerArray1);
      assertEquals(6, integerArray0.length);
      assertEquals(6, integerArray1.length);
      assertSame(integerArray0, integerArray1);
      assertSame(integerArray1, integerArray0);
  }
}
